{"version":3,"sources":["components/Tabs/Tabs.tsx","pages/TabsPage/TabsPage.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/PageNavLink/PageNavLink.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","tabId","useParams","selectedTabId","useMemo","find","tab","id","className","map","classNames","to","title","content","TabsPage","HomePage","NotFoundPage","PageNavLink","text","isActive","App","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"uPAUaA,EAAwB,SAAC,GAE/B,IADLC,EACI,EADJA,KAEQC,EAAUC,cAAVD,MAEFE,EAAgBC,mBAAQ,WAC5B,OAAOJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,OAClC,CAACA,IAEJ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAH,GAAG,OACX,oBACEE,UAAWE,IACT,CAAE,YAAaJ,EAAIC,KAAON,IAE5B,UAAQ,MAJV,SAOE,cAAC,IAAD,CACEU,GAAE,aAAQL,EAAIC,IACd,UAAQ,UAFV,SAIGD,EAAIM,SANFN,EAAIC,WAajB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGL,EACCA,EAAcU,QAEd,4BC3CJb,EAAO,CACX,CAAEO,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAG7BC,EAAqB,kBAChC,qCACE,oBAAIN,UAAU,QAAd,uBACA,cAAC,EAAD,CACER,KAAMA,QCXCe,EAAqB,WAChC,OACE,oBAAIP,UAAU,QAAd,wBCFSQ,EAAyB,WACpC,OACE,oBAAIR,UAAU,QAAd,6BCKSS,EAA+B,SAAC,GAAkB,IAAhBN,EAAe,EAAfA,GAAIO,EAAW,EAAXA,KACjD,OACE,cAAC,IAAD,CACEP,GAAIA,EACJH,UAAW,gBAAGW,EAAH,EAAGA,SAAH,OAAkBT,IAC3B,cACA,CAAE,YAAaS,KAJnB,SAOGD,KCLME,EAAM,WACjB,OACE,qCACE,qBACEZ,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaG,GAAG,IAAIO,KAAK,SACzB,cAAC,EAAD,CAAaP,GAAG,OAAOO,KAAK,gBAKlC,qBAAKV,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOa,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUX,GAAG,IAAIY,SAAO,MACpD,eAAC,IAAD,CAAOF,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,iBCjCrCG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0a931aa9.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n}) => {\n  const { tabId } = useParams();\n\n  const selectedTabId = useMemo(() => {\n    return tabs.find(tab => tab.id === tabId);\n  }, [tabId]);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames(\n                { 'is-active': tab.id === tabId },\n              )}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <Link\n                to={`../${tab.id}`}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabId ? (\n          selectedTabId.content\n        ) : (\n          'Please select a tab'\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Tabs } from '../../components/Tabs';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: React.FC = () => (\n  <>\n    <h1 className=\"title\">Tabs page</h1>\n    <Tabs\n      tabs={tabs}\n    />\n  </>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'is-active': isActive },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { TabsPage } from './pages/TabsPage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PageNavLink } from './components/PageNavLink';\n\nexport const App = () => {\n  return (\n    <>\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <PageNavLink to=\"/\" text=\"Home\" />\n            <PageNavLink to=\"tabs\" text=\"Tabs\" />\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"tabs\">\n              <Route index element={<TabsPage />} />\n              <Route path=\":tabId\" element={<TabsPage />} />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}